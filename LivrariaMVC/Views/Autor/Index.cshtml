@model Canducci.Pagination.Paginated<Autor>
@{
	var successMessage = TempData["SucessMessage"] as string;
}
@if (!string.IsNullOrWhiteSpace(successMessage))
{
	<div id="toast-container" class="position-fixed top-0 end-0 p-3" style="z-index:1000;">
		<div id="success-toast" class="toast align-items-center text-white bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true">
			<div class="d-flex">
				<div class="toast-body">
					@successMessage
				</div>
				<button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
			</div>
		</div>
	</div>
}

<div class="container rounded container_default">
	<h1 style="text-align:center"> Lista de autores</h1>
	<div class="row justify-content-center" style="gap:20px; padding-bottom:10px;">
		@{
			if (Model.Count() >= 1)
			{
				foreach (var autor in Model)
				{
					<partial name="_CardAutor" for=@autor />
				}
			}
			else
			{
				
				<h2 style="text-align:center;">Não existem autores cadastrados</h2>
			}
		}
	</div>
	<div>
		@Html.Pagination(
					Model,
					current => Url.Action("Index", new { current }),
					PaginatedStyle.Numbers,
					new PaginatedOptions
		{
			NextLabel = "Next",
			PreviousLabel = "Previous",
			FirstLabel = "First",
			LastLabel = "Last"
		}
					)
	</div>
</div>
<script>
	document.addEventListener('DOMContentLoaded', function () {
		var successToast = document.getElementById('success-toast');
		if (successToast) {
			var toast = new bootstrap.Toast(successToast, {
				delay: 5000
			});
			toast.show();
		}
	});
</script>
