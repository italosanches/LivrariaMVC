// <auto-generated />
using System;
using LivrariaMVC;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LivrariaMVC.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240729233708_adicionaimg")]
    partial class adicionaimg
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LivrariaMVC.Models.Autor", b =>
                {
                    b.Property<int>("AutorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AutorId"));

                    b.Property<string>("AutorName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AutorId");

                    b.ToTable("Autores");
                });

            modelBuilder.Entity("LivrariaMVC.Models.Genero", b =>
                {
                    b.Property<int>("GeneroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GeneroId"));

                    b.Property<string>("GeneroNome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("GeneroId");

                    b.ToTable("Generos");
                });

            modelBuilder.Entity("LivrariaMVC.Models.Livro", b =>
                {
                    b.Property<int>("LivroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LivroId"));

                    b.Property<DateTime>("LivroDataPublicacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("LivroDescricao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("LivroImgUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LivroQuantidadePaginas")
                        .HasColumnType("int");

                    b.Property<string>("LivroTitulo")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("StatusLivro")
                        .HasColumnType("int");

                    b.HasKey("LivroId");

                    b.ToTable("Livros");
                });

            modelBuilder.Entity("LivrariaMVC.Models.LivroAutor", b =>
                {
                    b.Property<int>("LivroId")
                        .HasColumnType("int");

                    b.Property<int>("AutorId")
                        .HasColumnType("int");

                    b.HasKey("LivroId", "AutorId");

                    b.HasIndex("AutorId");

                    b.ToTable("LivroAutores");
                });

            modelBuilder.Entity("LivrariaMVC.Models.LivroGenero", b =>
                {
                    b.Property<int>("LivroId")
                        .HasColumnType("int");

                    b.Property<int>("GeneroId")
                        .HasColumnType("int");

                    b.HasKey("LivroId", "GeneroId");

                    b.HasIndex("GeneroId");

                    b.ToTable("LivroGenero");
                });

            modelBuilder.Entity("LivrariaMVC.Models.LivroAutor", b =>
                {
                    b.HasOne("LivrariaMVC.Models.Autor", "Autor")
                        .WithMany("LivroAutores")
                        .HasForeignKey("AutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LivrariaMVC.Models.Livro", "Livro")
                        .WithMany("LivrosAutores")
                        .HasForeignKey("LivroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autor");

                    b.Navigation("Livro");
                });

            modelBuilder.Entity("LivrariaMVC.Models.LivroGenero", b =>
                {
                    b.HasOne("LivrariaMVC.Models.Genero", "Genero")
                        .WithMany("LivrosGeneros")
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LivrariaMVC.Models.Livro", "Livro")
                        .WithMany("LivrosGeneros")
                        .HasForeignKey("LivroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genero");

                    b.Navigation("Livro");
                });

            modelBuilder.Entity("LivrariaMVC.Models.Autor", b =>
                {
                    b.Navigation("LivroAutores");
                });

            modelBuilder.Entity("LivrariaMVC.Models.Genero", b =>
                {
                    b.Navigation("LivrosGeneros");
                });

            modelBuilder.Entity("LivrariaMVC.Models.Livro", b =>
                {
                    b.Navigation("LivrosAutores");

                    b.Navigation("LivrosGeneros");
                });
#pragma warning restore 612, 618
        }
    }
}
